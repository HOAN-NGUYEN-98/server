{"version":3,"sources":["connect.js"],"names":["express","require","sql","app","config","fs","password","database","encrypt","connect","err","console","log","get","request","response","Request","query","result","error","send","recordset","data","JSON","stringify","concat","listen","exec"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,IAAMD,QAAQ,SADdD,GAAOC,QAAGA,MAGVE,IAAMH,UAERI,OAAS,CAHPC,KAAKJ,KAKPK,SAAY,SAJVH,OAAMH,YAMRO,SAAY,UAJZH,QAAS,CACTI,SADS,IAGcN,IAAAO,QAAAL,OAAA,SAAAM,GACvB,GAAAA,EAAuB,MAAAA,EAEnBC,QAAAC,IAAW,4BAanBT,IAAIU,IAAI,IAAK,SAACC,EAASC,IAPnB,IAAIL,IAAKM,SAAAC,MAAA,uCAAA,SAAAP,EAAAQ,GACL,GAAMR,EACTC,QAAAQ,MAAA,yBAAAT,OAUU,CATHE,EAAIQ,KAAAF,EAAAG,WAYJV,QAAQC,IAAIM,EAAOG,WAP3B,IAAAC,EAAAC,KAAAC,UAAAN,EAAAG,WAGQV,GAAQQ,UAAM,YAAAG,EAAd,OAAA,SAAAZ,GAEcQ,EACfP,QAAAC,IAAA,uBAAAa,OAAAf,IACaQ,QAAOG,IAAPH,wCAeff,IAAAuB,OAAA,IAAA,WArBLf,QAAAC,IAAA,6BAyBJX,QAAA,iBAAA0B,KAAA","file":"connect.min.js","sourcesContent":["const express = require(\"express\");\r\nconst sql = require(\"mssql\");\r\nconst fs = require('fs');\r\nconst app = express();\r\n// SQL Server configuration\r\nvar config = {\r\n    \"user\": \"sa\", // Database username\r\n    \"password\": \"123456\", // Database password\r\n    \"server\": \"localhost\", // Server IP address\r\n    \"database\": \"DB_USER\", // Database name\r\n    \"options\": {\r\n        \"encrypt\": false // Disable encryption\r\n    }\r\n}\r\n \r\n// Connect to SQL Server\r\nsql.connect(config, err => {\r\n    if (err) {\r\n        throw err;\r\n    }\r\n    console.log(\"Connection Successful!\");\r\n});\r\n \r\n// Define route for fetching data from SQL Server\r\napp.get(\"/\", (request, response) => {\r\n    // Execute a SELECT query\r\n    new sql.Request().query(\"SELECT * FROM [DB_USER].[dbo].[USER]\", (err, result) => {\r\n        if (err) {\r\n            console.error(\"Error executing query:\", err);\r\n        } else {\r\n            response.send(result.recordset); // Send query result as response\r\n           // console.dir(result.recordset);\r\n            console.log(result.recordset);\r\n \r\n            const data = JSON.stringify(result.recordset);\r\n \r\n            // write file to disk\r\n            fs.writeFile('./db.json', data, 'utf8', (err) => {\r\n           \r\n                if (err) {\r\n                    console.log(`Error writing file: ${err}`);\r\n                } else {\r\n                    console.log(`File is written successfully!`);\r\n                }\r\n           \r\n            });\r\n \r\n        }\r\n    });\r\n});\r\n \r\n// Start the server on port 3000\r\napp.listen(3000, () => {\r\n    console.log(\"Listening on port 3000...\");\r\n    require('child_process').exec('start http://localhost:3000/');\r\n});"]}